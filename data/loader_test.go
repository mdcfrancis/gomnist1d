package data

import (
	"fmt"
	mnist1d "github.com/mdcfrancis/gomnist1d"
	"testing"
)

func TestLoadMNISTImageFile(t *testing.T) {
	_, err := LoadMNISTImageFile("mnist1d.json")
	if err != nil {
		t.Error(err)
	}
}

func generateData() mnist1d.DataSet {
	m := mnist1d.NewDefault()
	ds := m.MakeDataset()
	return ds
}

// TestLoadMNISTImageFileMatches tests that the data loaded from the file matches the data generated by the mnist1d package
// this is the core test that proves that this impl == the reference impl
func TestLoadMNISTImageFileMatches(t *testing.T) {
	ds, err := LoadMNISTImageFile("mnist1d.json")
	if err != nil {
		t.Error(err)
	}
	generated := generateData()
	loaded := ds.X
	for i, v := range generated.X {
		if !v.AlmostEqual(loaded[i], 1e-5) {
			t.Error(fmt.Errorf("Failed %d", i))
		}
	}
}

func TestLoadMNISTImageFileBadFile(t *testing.T) {
	_, err := LoadMNISTImageFile("bad_file.json")
	if err == nil {
		t.Error("Expected error")
	}
}

func TestParseMNISTIMageFile(t *testing.T) {
	_, err := ParseMNISTIMageFile([]byte(`{"x": [[1, 2, 3],[4,5,6]], "y": [1, 2, 3]}`))
	if err != nil {
		t.Error(err)
	}
}

func TestParseMNISTImageFileBadJSON(t *testing.T) {
	_, err := ParseMNISTIMageFile([]byte(`{"x": [1, 2, 3], "y": [1, 2, 3`))
	if err == nil {
		t.Error("Expected error")
	}
}
